Single Responsibility Principle (SRP)

This means that every class, or similar structure, in your code should have only one job to do.
Everything in that class should be related to a single purpose.
Our class should not be like a Swiss knife wherein if one of them needs to be changed then the entire tool needs to be altered.
It does not mean that your classes should only contain one method or property. There may be many members as long as they relate to single responsibility.

The Single Responsibility Principle gives us a good way of identifying classes at the design phase of an application and it makes you think of all the ways
a class can change. A good separation of responsibilities is done only when we have the full picture of how the application should work.

* For example The Timer class only handler the wait time you need before excute an specified event.

* Bomb class represent a bad way to write an class.

* The ColliderOverlap, DestroyAction, Timer, TriggerOverlap, AreaDamage is and good way of design a bomb class when every class have a single responsability.
